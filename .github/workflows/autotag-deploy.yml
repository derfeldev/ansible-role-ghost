# SPDX-FileCopyrightText: 2025 Pavel Dimov <@sagat79>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Autotag and Deploy Ghost Role

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  autotag-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get current Ghost version
        id: get_current_version
        run: |
          VERSION=$(grep '^ghost_version:' defaults/main.yml | sed 's/.*: *//' | tr -d "'\"")
          echo "current_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Find latest Renovate Docker commit
        id: find_renovate_commit
        run: |
          git log --pretty=format:'%H|%an|%s' --grep="docker tag to" --grep="update docker" --grep="bump.*ghost" -i | while IFS='|' read -r commit author subject; do
            if [[ "$author" == "renovate[bot]" ]]; then
              VERSION=$(echo "$subject" | sed -E 's/.*[Dd]ocker tag to v?([0-9]+\.[0-9]+(\.[0-9]+)?).*/\1/')
              if [[ "$VERSION" == "" ]]; then
                VERSION=$(echo "$subject" | sed -E 's/.*bump.*ghost.*to v?([0-9]+\.[0-9]+(\.[0-9]+)?).*/\1/i')
              fi
              if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+(\.[0-9]+)?$ ]]; then
                echo "new_version=$VERSION" >> $GITHUB_OUTPUT
                echo "commit_hash=$commit" >> $GITHUB_OUTPUT
                break
              fi
            fi
          done

      - name: Determine version to tag
        id: determine_version
        run: |
          if [[ "${{ steps.find_renovate_commit.outputs.new_version }}" != "" ]]; then
            VERSION="${{ steps.find_renovate_commit.outputs.new_version }}"
          else
            VERSION="${{ steps.get_current_version.outputs.current_version }}"
          fi

          BUILD_NUMBER=0
          while git tag -l "${VERSION}-${BUILD_NUMBER}" | grep -q "${VERSION}-${BUILD_NUMBER}"; do
            BUILD_NUMBER=$((BUILD_NUMBER + 1))
          done

          TAG_NAME="${VERSION}-${BUILD_NUMBER}"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG="${{ steps.determine_version.outputs.tag_name }}"
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG$"; then
            echo "already_tagged=true" >> $GITHUB_OUTPUT
            echo "Tag $TAG already exists. Skipping tag creation."
          else
            echo "already_tagged=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Create and push tag
        if: steps.check_tag.outputs.already_tagged == 'false'
        run: |
          TAG="${{ steps.determine_version.outputs.tag_name }}"
          VERSION="${{ steps.determine_version.outputs.version }}"
          HASH="${{ steps.find_renovate_commit.outputs.commit_hash }}"
          if [[ "$HASH" == "" ]]; then HASH="HEAD"; fi
          git tag -a "$TAG" "$HASH" -m "Release $TAG - Ghost v$VERSION"
          git push origin "$TAG"

      - name: Publish to Ansible Galaxy
        if: steps.check_tag.outputs.already_tagged == 'false'
        env:
          GALAXY_TOKEN: ${{ secrets.ANSIBLE_GALAXY_TOKEN }}
        run: |
          ansible-galaxy role import \
            --api-key $GALAXY_TOKEN \
            derfeldev \
            ansible-role-ghost

      - name: Summary
        run: |
          echo "Ghost version: ${{ steps.determine_version.outputs.version }}"
          echo "Tag: ${{ steps.determine_version.outputs.tag_name }}"
          echo "Build number: ${{ steps.determine_version.outputs.build_number }}"
